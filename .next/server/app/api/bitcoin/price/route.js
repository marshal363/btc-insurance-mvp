/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bitcoin/price/route";
exports.ids = ["app/api/bitcoin/price/route"];
exports.modules = {

/***/ "(rsc)/./app/api/bitcoin/price/route.ts":
/*!****************************************!*\
  !*** ./app/api/bitcoin/price/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_bitcoin_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/bitcoin-api */ \"(rsc)/./app/lib/bitcoin-api.ts\");\n\n\nasync function GET(request) {\n    try {\n        const data = await (0,_lib_bitcoin_api__WEBPACK_IMPORTED_MODULE_1__.getBitcoinPriceData)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data);\n    } catch (error) {\n        console.error('Error fetching Bitcoin price:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to fetch Bitcoin price data'\n        }, {\n            status: 500\n        });\n    }\n}\n// Force refresh of price data\nasync function POST(request) {\n    try {\n        // Get days parameter from query or use default\n        const searchParams = request.nextUrl.searchParams;\n        const days = parseInt(searchParams.get('days') || '30', 10);\n        const refreshedData = await (0,_lib_bitcoin_api__WEBPACK_IMPORTED_MODULE_1__.getBitcoinPriceData)(true);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(refreshedData);\n    } catch (error) {\n        console.error('Error refreshing Bitcoin price:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to refresh Bitcoin price data'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2JpdGNvaW4vcHJpY2Uvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNPO0FBRXhELGVBQWVFLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNQyxPQUFPLE1BQU1ILHFFQUFtQkE7UUFDdEMsT0FBT0QscURBQVlBLENBQUNLLElBQUksQ0FBQ0Q7SUFDM0IsRUFBRSxPQUFPRSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQ0FBaUNBO1FBQy9DLE9BQU9OLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO1lBQUVDLE9BQU87UUFBcUMsR0FDOUM7WUFBRUUsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFQSw4QkFBOEI7QUFDdkIsZUFBZUMsS0FBS04sT0FBb0I7SUFDN0MsSUFBSTtRQUNGLCtDQUErQztRQUMvQyxNQUFNTyxlQUFlUCxRQUFRUSxPQUFPLENBQUNELFlBQVk7UUFDakQsTUFBTUUsT0FBT0MsU0FBU0gsYUFBYUksR0FBRyxDQUFDLFdBQVcsTUFBTTtRQUV4RCxNQUFNQyxnQkFBZ0IsTUFBTWQscUVBQW1CQSxDQUFDO1FBQ2hELE9BQU9ELHFEQUFZQSxDQUFDSyxJQUFJLENBQUNVO0lBQzNCLEVBQUUsT0FBT1QsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUNBQW1DQTtRQUNqRCxPQUFPTixxREFBWUEsQ0FBQ0ssSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQXVDLEdBQ2hEO1lBQUVFLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2FwcC9hcGkvYml0Y29pbi9wcmljZS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgZ2V0Qml0Y29pblByaWNlRGF0YSB9IGZyb20gJy4uLy4uLy4uL2xpYi9iaXRjb2luLWFwaSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgZ2V0Qml0Y29pblByaWNlRGF0YSgpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihkYXRhKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBCaXRjb2luIHByaWNlOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIEJpdGNvaW4gcHJpY2UgZGF0YScgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLy8gRm9yY2UgcmVmcmVzaCBvZiBwcmljZSBkYXRhXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIEdldCBkYXlzIHBhcmFtZXRlciBmcm9tIHF1ZXJ5IG9yIHVzZSBkZWZhdWx0XG4gICAgY29uc3Qgc2VhcmNoUGFyYW1zID0gcmVxdWVzdC5uZXh0VXJsLnNlYXJjaFBhcmFtcztcbiAgICBjb25zdCBkYXlzID0gcGFyc2VJbnQoc2VhcmNoUGFyYW1zLmdldCgnZGF5cycpIHx8ICczMCcsIDEwKTtcbiAgICBcbiAgICBjb25zdCByZWZyZXNoZWREYXRhID0gYXdhaXQgZ2V0Qml0Y29pblByaWNlRGF0YSh0cnVlKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVmcmVzaGVkRGF0YSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVmcmVzaGluZyBCaXRjb2luIHByaWNlOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIHJlZnJlc2ggQml0Y29pbiBwcmljZSBkYXRhJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRCaXRjb2luUHJpY2VEYXRhIiwiR0VUIiwicmVxdWVzdCIsImRhdGEiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwic3RhdHVzIiwiUE9TVCIsInNlYXJjaFBhcmFtcyIsIm5leHRVcmwiLCJkYXlzIiwicGFyc2VJbnQiLCJnZXQiLCJyZWZyZXNoZWREYXRhIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/bitcoin/price/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/bitcoin-api.ts":
/*!********************************!*\
  !*** ./app/lib/bitcoin-api.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBitcoinPriceData: () => (/* binding */ getBitcoinPriceData),\n/* harmony export */   refreshBitcoinPrice: () => (/* binding */ refreshBitcoinPrice)\n/* harmony export */ });\n// Cache for Bitcoin price data\nlet priceCache = {\n    currentPrice: 0,\n    lastUpdated: \"\",\n    dayLow: 0,\n    dayHigh: 0,\n    priceChange24h: 0,\n    priceChangePercentage24h: 0,\n    historicalVolatility: 0,\n    exchanges: [],\n    period: 30\n};\n// Initialize with default data\nlet cacheFilled = false;\n// List of exchanges to query for price data\nconst EXCHANGES = [\n    {\n        name: \"CoinGecko\",\n        url: \"https://api.coingecko.com/api/v3/coins/bitcoin?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false\",\n        weight: 1.0\n    },\n    {\n        name: \"Binance US\",\n        url: \"https://api.binance.us/api/v3/ticker/24hr?symbol=BTCUSD\",\n        weight: 0.9\n    },\n    {\n        name: \"Coinbase\",\n        url: \"https://api.coinbase.com/v2/prices/BTC-USD/spot\",\n        weight: 0.9\n    },\n    {\n        name: \"Kraken\",\n        url: \"https://api.kraken.com/0/public/Ticker?pair=XBTUSD\",\n        weight: 0.8\n    },\n    {\n        name: \"Bitfinex\",\n        url: \"https://api-pub.bitfinex.com/v2/ticker/tBTCUSD\",\n        weight: 0.8\n    },\n    {\n        name: \"Gemini\",\n        url: \"https://api.gemini.com/v1/pubticker/btcusd\",\n        weight: 0.7\n    },\n    {\n        name: \"Bitstamp\",\n        url: \"https://www.bitstamp.net/api/v2/ticker/btcusd/\",\n        weight: 0.7\n    }\n];\n/**\n * Parse response from various exchanges into a consistent format\n */ function parseExchangeResponse(exchange, data) {\n    try {\n        switch(exchange){\n            case \"CoinGecko\":\n                return {\n                    price: data.market_data.current_price.usd,\n                    low: data.market_data.low_24h.usd,\n                    high: data.market_data.high_24h.usd\n                };\n            case \"Binance US\":\n                return {\n                    price: parseFloat(data.lastPrice),\n                    low: parseFloat(data.lowPrice),\n                    high: parseFloat(data.highPrice)\n                };\n            case \"Coinbase\":\n                return {\n                    price: parseFloat(data.data.amount)\n                };\n            case \"Kraken\":\n                // Kraken uses XXBTZUSD or XBTUSD as the pair name\n                const pair = data.result.XXBTZUSD || data.result.XBTUSD;\n                return {\n                    price: parseFloat(pair.c[0]),\n                    low: parseFloat(pair.l[1]),\n                    high: parseFloat(pair.h[1])\n                };\n            case \"Bitfinex\":\n                // Bitfinex returns an array: [BID, BID_SIZE, ASK, ASK_SIZE, DAILY_CHANGE, ...]\n                return {\n                    price: data[6],\n                    low: data[9],\n                    high: data[8]\n                };\n            case \"Gemini\":\n                return {\n                    price: parseFloat(data.last)\n                };\n            case \"Bitstamp\":\n                return {\n                    price: parseFloat(data.last),\n                    low: parseFloat(data.low),\n                    high: parseFloat(data.high)\n                };\n            default:\n                throw new Error(`Unknown exchange: ${exchange}`);\n        }\n    } catch (error) {\n        console.error(`Error parsing ${exchange} response:`, error);\n        throw error;\n    }\n}\n/**\n * Fetch Bitcoin price data from multiple exchange APIs\n */ async function fetchPriceFromAPIs() {\n    const exchangeResults = [];\n    let successfulFetches = 0;\n    let aggregatedPrice = 0;\n    let lowestPrice = Infinity;\n    let highestPrice = 0;\n    let priceChange24h = 0;\n    let priceChangePercentage24h = 0;\n    const timestamp = new Date().toISOString();\n    // Fetch data from all exchanges in parallel\n    const fetchPromises = EXCHANGES.map(async (exchange)=>{\n        try {\n            const response = await fetch(exchange.url, {\n                headers: {\n                    'User-Agent': 'BitHedge Premium Calculator/1.0'\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`API Error: ${response.status}`);\n            }\n            const data = await response.json();\n            const parsedData = parseExchangeResponse(exchange.name, data);\n            // Store the exchange result\n            exchangeResults.push({\n                name: exchange.name,\n                price: parsedData.price,\n                lastUpdated: timestamp,\n                confidence: exchange.weight * 100\n            });\n            // Update aggregate values\n            aggregatedPrice += parsedData.price * exchange.weight;\n            successfulFetches += exchange.weight;\n            // Update low and high values\n            if (parsedData.low && parsedData.low < lowestPrice) {\n                lowestPrice = parsedData.low;\n            }\n            if (parsedData.high && parsedData.high > highestPrice) {\n                highestPrice = parsedData.high;\n            }\n            // Get 24h change from CoinGecko as most reliable source\n            if (exchange.name === \"CoinGecko\") {\n                const coinGeckoData = data;\n                priceChange24h = coinGeckoData.market_data.price_change_24h;\n                priceChangePercentage24h = coinGeckoData.market_data.price_change_percentage_24h;\n            }\n            return true;\n        } catch (error) {\n            console.error(`Error fetching from ${exchange.name}:`, error);\n            return false;\n        }\n    });\n    // Wait for all fetches to complete\n    await Promise.all(fetchPromises);\n    // Calculate weighted average price from all successful sources\n    const finalPrice = successfulFetches > 0 ? aggregatedPrice / successfulFetches : 0;\n    // If we couldn't get low/high from any source, estimate them\n    if (lowestPrice === Infinity) {\n        lowestPrice = finalPrice * 0.98; // Estimate 2% lower\n    }\n    if (highestPrice === 0) {\n        highestPrice = finalPrice * 1.02; // Estimate 2% higher\n    }\n    // If we couldn't get price change data, use conservative estimates\n    if (priceChange24h === 0 && finalPrice > 0 && cacheFilled) {\n        priceChange24h = finalPrice - priceCache.currentPrice;\n        priceChangePercentage24h = priceChange24h / priceCache.currentPrice * 100;\n    }\n    // Estimate volatility if not already in cache\n    const historicalVolatility = priceCache.historicalVolatility || 42.5; // Default value if not yet calculated\n    const priceData = {\n        currentPrice: finalPrice,\n        lastUpdated: timestamp,\n        dayLow: lowestPrice,\n        dayHigh: highestPrice,\n        priceChange24h,\n        priceChangePercentage24h,\n        historicalVolatility,\n        exchanges: exchangeResults.sort((a, b)=>b.confidence - a.confidence),\n        period: priceCache.period || 30\n    };\n    // If we have valid data, update cache\n    if (finalPrice > 0) {\n        priceCache = priceData;\n        cacheFilled = true;\n        return priceData;\n    }\n    // If all APIs failed and we have cached data, return that\n    if (cacheFilled) {\n        return {\n            ...priceCache,\n            lastUpdated: timestamp\n        };\n    }\n    // Fall back to hardcoded data if everything fails and no cache\n    return {\n        currentPrice: 95010.28,\n        lastUpdated: timestamp,\n        dayLow: 93500.75,\n        dayHigh: 96125.90,\n        priceChange24h: 1245.65,\n        priceChangePercentage24h: 1.32,\n        historicalVolatility: 42.5,\n        period: 30,\n        exchanges: [\n            {\n                name: \"Fallback\",\n                price: 95010.28,\n                lastUpdated: timestamp,\n                confidence: 50\n            }\n        ]\n    };\n}\n/**\n * Get Bitcoin price data, using cache if available\n * This function is used by Next.js API routes\n */ async function getBitcoinPriceData(forceRefresh = false) {\n    if (!cacheFilled || forceRefresh) {\n        return await fetchPriceFromAPIs();\n    }\n    // Check if cache is stale (older than 1 minute)\n    const lastUpdated = new Date(priceCache.lastUpdated);\n    const now = new Date();\n    const diffMs = now.getTime() - lastUpdated.getTime();\n    const diffSecs = diffMs / 1000;\n    if (diffSecs > 60) {\n        // Refresh cache in background, but return current cache immediately\n        fetchPriceFromAPIs().catch((err)=>console.error(\"Error refreshing price cache:\", err));\n    }\n    return priceCache;\n}\n/**\n * Force refresh of Bitcoin price data from all sources\n */ async function refreshBitcoinPrice() {\n    return await fetchPriceFromAPIs();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/bitcoin-api.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbitcoin%2Fprice%2Froute&page=%2Fapi%2Fbitcoin%2Fprice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbitcoin%2Fprice%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbitcoin%2Fprice%2Froute&page=%2Fapi%2Fbitcoin%2Fprice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbitcoin%2Fprice%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_runner_workspace_app_api_bitcoin_price_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/bitcoin/price/route.ts */ \"(rsc)/./app/api/bitcoin/price/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bitcoin/price/route\",\n        pathname: \"/api/bitcoin/price\",\n        filename: \"route\",\n        bundlePath: \"app/api/bitcoin/price/route\"\n    },\n    resolvedPagePath: \"/home/runner/workspace/app/api/bitcoin/price/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_app_api_bitcoin_price_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZiaXRjb2luJTJGcHJpY2UlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJpdGNvaW4lMkZwcmljZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmJpdGNvaW4lMkZwcmljZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDSztBQUNsRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9hcHAvYXBpL2JpdGNvaW4vcHJpY2Uvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9iaXRjb2luL3ByaWNlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYml0Y29pbi9wcmljZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYml0Y29pbi9wcmljZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvYXBwL2FwaS9iaXRjb2luL3ByaWNlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbitcoin%2Fprice%2Froute&page=%2Fapi%2Fbitcoin%2Fprice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbitcoin%2Fprice%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbitcoin%2Fprice%2Froute&page=%2Fapi%2Fbitcoin%2Fprice%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbitcoin%2Fprice%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();